@startuml
hide footbox
[->IncomeController: input(instance)
IncomeController -> Task: generateTaskAndSave(instance)
note right: can redo when failed
IncomeController -> Instance: save(instance)
Instance -> TaskSvc: create task for store
activate Instance
Instance -> Instance: init to `Business` \nfor `ThingType`
Instance -> InstanceSvc: verify
note left: maybe not exists
Instance -> RouteSvc: get missions
Instance -> Instance: save instance
Instance --\\ InnerController: instance stored
note right #aqua : async \nno mission will exit
deactivate Instance
activate InnerController
InnerController -> ConverterSvc: generate convert information
note left: maybe many
InnerController -> TaskSvc: create new tasks and finish prior task
loop each convert info
    InnerController --\\ InnerController: convert
    note left #aqua : async: call out to convert
    activate InnerController
    InnerController -> ConverterSvc: convert
    activate ConverterSvc
    deactivate InnerController
end
deactivate InnerController
ConverterSvc -> InstanceSvc: verify
ConverterSvc -\\ InnerController: converted
deactivate ConverterSvc
note left #aqua : async
activate InnerController
InnerController -> PlanSvc: save
loop each plan
    InnerController -> Instance: generate task for store
end
InnerController -> TaskSvc: create new tasks and finish prior task
loop each task
    InnerController -\\ InnerController: to store
    note left #aqua : async
    InnerController -> Instance: save instance
end


@enduml